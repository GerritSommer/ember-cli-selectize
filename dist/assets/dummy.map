{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/app.js","dummy/components/ember-selectize.js","dummy/controllers/application.js","dummy/controllers/array.js","dummy/controllers/object.js","dummy/ember-cli-selectize/tests/modules/ember-cli-selectize/components/ember-selectize.jshint.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/router.js","dummy/templates/application.js","dummy/templates/test.js","dummy/tests/app.jshint.js","dummy/tests/controllers/application.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/ember-selectize-test.js","dummy/tests/unit/components/ember-selectize-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/components/ember-selectize', ['exports', 'ember-cli-selectize/components/ember-selectize'], function (exports, EmberSelectizeComponent) {\n\n\t'use strict';\n\n\texports['default'] = EmberSelectizeComponent['default'];\n\n});","define('dummy/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  /* global alert */\n  exports['default'] = Ember['default'].Controller.extend({\n    names: Ember['default'].A(['Tom', 'Yehuda', 'Mike']),\n    items: Ember['default'].A([Ember['default'].Object.create({\n      id: 1,\n      label: 'Item 1'\n    }), Ember['default'].Object.create({\n      id: 2,\n      label: 'Item 2'\n    }), Ember['default'].Object.create({\n      id: 3,\n      label: 'Item 3'\n    }), Ember['default'].Object.create({\n      id: 4,\n      label: 'Item 4'\n    })]),\n\n    getOption: function getOption(item, escape) {\n      return '<div class=\"hello\"><i>' + escape(item.value) + '</i>) ' + escape(item.label) + '</div>';\n    },\n\n    taggedContent: Ember['default'].A(),\n    taggedValues: Ember['default'].A(),\n    itemValue: 3,\n    taggedValuesString: Ember['default'].computed('taggedValues.[]', function () {\n      return this.get('taggedValues').join(', ');\n    }),\n\n    actions: {\n      createAction: function createAction(str) {\n        alert(str);\n      },\n      selectItem: function selectItem(v) {\n        this.set('itemValue', v);\n      },\n\n      createTag: function createTag(input) {\n        this.get('taggedContent').addObject(input);\n        this.get('taggedValues').addObject(input);\n      }\n    }\n  });\n\n});","define('dummy/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('dummy/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('dummy/ember-cli-selectize/tests/modules/ember-cli-selectize/components/ember-selectize.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - modules/ember-cli-selectize/components');\n  test('modules/ember-cli-selectize/components/ember-selectize.js should pass jshint', function () {\n    ok(true, 'modules/ember-cli-selectize/components/ember-selectize.js should pass jshint.');\n  });\n\n});","define('dummy/initializers/app-version', ['exports', 'dummy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n\n});","define('dummy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 50,\n              \"column\": 17\n            },\n            \"end\": {\n              \"line\": 50,\n              \"column\": 62\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"v.label\"]\n        ],\n        locals: [\"v\"],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 64,\n              \"column\": 17\n            },\n            \"end\": {\n              \"line\": 64,\n              \"column\": 62\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"v.label\"]\n        ],\n        locals: [\"v\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 94,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"id\",\"title\");\n        var el2 = dom.createTextNode(\"Selectize test\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Normal usage with strings\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Normal usage with objects + \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"selection\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Normal usage with objects + \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"value\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        var el2 = dom.createTextNode(\"Select 1\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        var el2 = dom.createTextNode(\"Select 3\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Multiple usage with objects + \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"selection\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Multiple usage with objects + \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"optionFunction\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" rendering\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Delimiter example\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [20]);\n        var element1 = dom.childAt(fragment, [22]);\n        var morphs = new Array(14);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [10]),1,1);\n        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [12]),1,1);\n        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [16]),1,1);\n        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [18]),1,1);\n        morphs[6] = dom.createElementMorph(element0);\n        morphs[7] = dom.createElementMorph(element1);\n        morphs[8] = dom.createMorphAt(dom.childAt(fragment, [26]),1,1);\n        morphs[9] = dom.createMorphAt(dom.childAt(fragment, [28, 1]),0,0);\n        morphs[10] = dom.createMorphAt(dom.childAt(fragment, [32]),1,1);\n        morphs[11] = dom.createMorphAt(dom.childAt(fragment, [34, 1]),0,0);\n        morphs[12] = dom.createMorphAt(dom.childAt(fragment, [38]),1,1);\n        morphs[13] = dom.createMorphAt(dom.childAt(fragment, [40]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"ember-selectize\",[],[\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"controller.names\"]],[]],\"selection\",[\"subexpr\",\"@mut\",[[\"get\",\"name\"]],[]],\"placeholder\",\"Select a name\"]],\n        [\"content\",\"name\"],\n        [\"inline\",\"ember-selectize\",[],[\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"controller.items\"]],[]],\"optionValuePath\",\"content.id\",\"optionLabelPath\",\"content.label\",\"selection\",[\"subexpr\",\"@mut\",[[\"get\",\"item\"]],[]],\"create-item\",\"createAction\",\"placeholder\",\"Select an item\"]],\n        [\"content\",\"item.label\"],\n        [\"inline\",\"ember-selectize\",[],[\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"controller.items\"]],[]],\"optionValuePath\",\"content.id\",\"optionLabelPath\",\"content.label\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"controller.itemValue\"]],[]],\"create-item\",\"createAction\",\"placeholder\",\"Select an item\"]],\n        [\"content\",\"itemValue\"],\n        [\"element\",\"action\",[\"selectItem\",1],[]],\n        [\"element\",\"action\",[\"selectItem\",3],[]],\n        [\"inline\",\"ember-selectize\",[],[\"multiple\",true,\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"controller.items\"]],[]],\"optionValuePath\",\"content.id\",\"optionLabelPath\",\"content.label\",\"selection\",[\"subexpr\",\"@mut\",[[\"get\",\"itemValues\"]],[]],\"create\",\"createAction\",\"placeholder\",\"Select an item\"]],\n        [\"block\",\"each\",[[\"get\",\"itemValues\"]],[],0,null],\n        [\"inline\",\"ember-selectize\",[],[\"multiple\",true,\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"controller.items\"]],[]],\"optionValuePath\",\"content.id\",\"optionLabelPath\",\"content.label\",\"selection\",[\"subexpr\",\"@mut\",[[\"get\",\"itemValues\"]],[]],\"create\",\"createAction\",\"optionFunction\",[\"subexpr\",\"@mut\",[[\"get\",\"getOption\"]],[]],\"placeholder\",\"Select an item\"]],\n        [\"block\",\"each\",[[\"get\",\"itemValues\"]],[],1,null],\n        [\"inline\",\"ember-selectize\",[],[\"persist\",false,\"multiple\",true,\"content\",[\"subexpr\",\"@mut\",[[\"get\",\"taggedContent\"]],[]],\"selection\",[\"subexpr\",\"@mut\",[[\"get\",\"taggedValues\"]],[]],\"delimiter\",\",\",\"create-item\",\"createTag\"]],\n        [\"content\",\"taggedValuesString\"]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('dummy/templates/test', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/test.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Hi\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() { return []; },\n      statements: [\n\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/ember-selectize-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('ember-selectize', 'Unit | Component | ember-selectize', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n\n    //test select tagname and ember-selectize class\n  });\n\n  ember_qunit.test('multiple attribute is bound', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('multiple', true);\n    });\n    assert.equal(this.$().attr('multiple'), 'multiple');\n  });\n\n  ember_qunit.test('autocomplete attribute is bound and off', function (assert) {\n    var component = this.subject();\n    assert.equal(this.$().attr('autocomplete'), 'off');\n  });\n\n  ember_qunit.test('required attribute is bound', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('required', true);\n    });\n    assert.equal(this.$().attr('required'), 'required');\n  });\n\n  ember_qunit.test('maxItems is passed to selectize', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('maxItems', 10);\n    });\n    this.render();\n    assert.equal(component._selectize.settings.maxItems, 10);\n  });\n\n  ember_qunit.test('placeholder is passed to selectize', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('placeholder', 'some placeholder here');\n    });\n    this.render();\n    assert.equal(component._selectize.settings.placeholder, 'some placeholder here');\n  });\n\n  var exampleObjectContent = function exampleObjectContent() {\n    return Ember['default'].A([Ember['default'].Object.create({\n      id: 1,\n      label: 'item 1'\n    }), Ember['default'].Object.create({\n      id: 2,\n      label: 'item 2'\n    }), Ember['default'].Object.create({\n      id: 3,\n      label: 'item 3'\n    })]);\n  };\n\n  var objectSize = function objectSize(obj) {\n    var size = 0;var key;\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n  };\n\n  var asArray = function asArray(obj, path) {\n    var key;var values = [];\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (path) {\n          values.push(obj[key][path]);\n        } else {\n          values.push(obj[key]);\n        }\n      }\n    }\n    return values;\n  };\n\n  var keysToArray = function keysToArray(obj) {\n    var key;var keys = [];\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  };\n\n  ember_qunit.test('selectize has correct number of options', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n    });\n    this.render();\n    assert.equal(objectSize(component._selectize.options), 3);\n  });\n\n  ember_qunit.test('if no optionValuePath pass selectize the value itself', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n    });\n    this.render();\n    assert.deepEqual(keysToArray(component._selectize.options), ['item 1', 'item 2', 'item 3']);\n    assert.deepEqual(asArray(component._selectize.options, 'value'), ['item 1', 'item 2', 'item 3']);\n  });\n\n  ember_qunit.test('if no optionLabelPath pass selectize the value itself', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n    });\n    this.render();\n    assert.deepEqual(asArray(component._selectize.options, 'label'), ['item 1', 'item 2', 'item 3']);\n  });\n\n  ember_qunit.test('optionValuePath passes selectize the desired value', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', exampleObjectContent());\n      component.set('optionValuePath', 'id');\n    });\n    this.render();\n    assert.deepEqual(exampleObjectContent().mapBy('id'), asArray(component._selectize.options, 'value'));\n  });\n\n  ember_qunit.test('optionLabelPath passes selectize the desired label', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', exampleObjectContent());\n      component.set('optionValuePath', 'id');\n      component.set('optionLabelPath', 'label');\n    });\n    this.render();\n    assert.deepEqual(asArray(component._selectize.options, 'label'), exampleObjectContent().mapBy('label'));\n  });\n\n  ember_qunit.test('selectize labels are updated', function (assert) {\n    var component = this.subject();\n    var content = exampleObjectContent();\n    Ember['default'].run(function () {\n      component.set('content', content);\n      component.set('optionValuePath', 'id');\n      component.set('optionLabelPath', 'label');\n    });\n    this.render();\n    assert.deepEqual(asArray(component._selectize.options, 'label'), exampleObjectContent().mapBy('label'));\n\n    Ember['default'].run(function () {\n      content.objectAt(0).set('label', 'another label');\n    });\n\n    assert.equal(asArray(component._selectize.options, 'label')[0], 'another label');\n  });\n\n  ember_qunit.test('adding to content updates selectize options', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n    });\n    this.render();\n    assert.equal(objectSize(component._selectize.options), 3);\n\n    Ember['default'].run(function () {\n      component.get('content').pushObject('extra item');\n    });\n\n    assert.equal(objectSize(component._selectize.options), 4);\n  });\n\n  ember_qunit.test('removing from content updates selectize options', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n    });\n    this.render();\n    assert.equal(objectSize(component._selectize.options), 3);\n    Ember['default'].run(function () {\n      component.get('content').removeObject('item 1');\n    });\n\n    assert.equal(objectSize(component._selectize.options), 2);\n  });\n\n  ember_qunit.test('replacing content updates selectize options', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n    });\n    this.render();\n    assert.equal(objectSize(component._selectize.options), 3);\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1']));\n    });\n\n    assert.equal(objectSize(component._selectize.options), 1);\n    assert.deepEqual(asArray(component._selectize.options, 'label'), ['item 1']);\n  });\n\n  ember_qunit.test('having a selection creates selectize with a selection', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n      component.set('selection', 'item 2');\n    });\n    this.render();\n    assert.equal(component._selectize.items.length, 1);\n    assert.deepEqual(component._selectize.items, ['item 2']);\n  });\n\n  ember_qunit.test('having a multiple selection creates selectize with a selection', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n      component.set('selection', Ember['default'].A(['item 2', 'item 3']));\n      component.set('multiple', true);\n    });\n    this.render();\n    assert.equal(component._selectize.items.length, 2);\n    assert.deepEqual(component._selectize.items, ['item 2', 'item 3']);\n  });\n\n  ember_qunit.test('updating a selection updates selectize selection', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3']));\n      component.set('selection', 'item 2');\n    });\n    this.render();\n    assert.equal(component._selectize.items.length, 1);\n    assert.deepEqual(component._selectize.items, ['item 2']);\n    Ember['default'].run(function () {\n      component.set('selection', 'item 3');\n    });\n    assert.equal(component._selectize.items.length, 1);\n    assert.deepEqual(component._selectize.items, ['item 3']);\n  });\n\n  ember_qunit.test('updating a selection updates selectize value', function (assert) {\n    var component = this.subject();\n    var content = exampleObjectContent();\n    Ember['default'].run(function () {\n      component.set('content', content);\n      component.set('optionValuePath', 'content.id');\n      component.set('optionLabelPath', 'content.label');\n      component.set('value', 1);\n    });\n    this.render();\n    assert.equal(component._selectize.getValue(), 1);\n    assert.equal(component.get('selection'), content.objectAt(0));\n    Ember['default'].run(function () {\n      component._selectize.setValue(2);\n    });\n    assert.equal(component.get('value'), 2);\n    assert.equal(component.get('selection'), content.objectAt(1));\n  });\n\n  ember_qunit.test('replacing a multiple selection updates selectize selection', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3', 'item 4']));\n      component.set('selection', Ember['default'].A(['item 2', 'item 3']));\n      component.set('multiple', true);\n    });\n    this.render();\n    assert.equal(component._selectize.items.length, 2);\n    assert.deepEqual(component._selectize.items, ['item 2', 'item 3']);\n    Ember['default'].run(function () {\n      component.set('selection', Ember['default'].A(['item 1', 'item 2', 'item 4']));\n    });\n    assert.equal(component._selectize.items.length, 3);\n    assert.deepEqual(component._selectize.items, ['item 1', 'item 2', 'item 4']);\n  });\n\n  ember_qunit.test('adding a multiple selection updates selectize selection', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3', 'item 4']));\n      component.set('selection', Ember['default'].A(['item 2', 'item 3']));\n      component.set('multiple', true);\n    });\n    this.render();\n    assert.equal(component._selectize.items.length, 2);\n    assert.deepEqual(component._selectize.items, ['item 2', 'item 3']);\n    Ember['default'].run(function () {\n      component.get('selection').pushObject('item 4');\n    });\n    assert.equal(component._selectize.items.length, 3);\n    assert.deepEqual(component._selectize.items, ['item 2', 'item 3', 'item 4']);\n  });\n\n  ember_qunit.test('it sends update-filter action when changing filter', function (assert) {\n    assert.expect(1);\n\n    var testText = 'dummy text';\n    var component = this.subject();\n    var targetObject = {\n      externalAction: function externalAction(query) {\n        assert.equal(query, testText, 'externalAction was called with proper argument');\n      }\n    };\n\n    component.set('update-filter', 'externalAction');\n    component.set('targetObject', targetObject);\n\n    Ember['default'].run(function () {\n      component._onType(testText);\n    });\n  });\n\n  ember_qunit.test('it sends create-item action when an item is created in selectize', function (assert) {\n    assert.expect(1);\n\n    var testText = 'dummy text';\n    var component = this.subject();\n    var targetObject = {\n      externalAction: function externalAction(query) {\n        assert.equal(query, testText, 'externalAction was called with proper argument');\n      }\n    };\n    this.render();\n    component.set('create-item', 'externalAction');\n    component.set('targetObject', targetObject);\n\n    Ember['default'].run(function () {\n      component._create(testText, function () {});\n    });\n  });\n\n  ember_qunit.test('it sends select-item action when an item is selected', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n\n    var targetObject = {\n      externalAction: function externalAction(obj) {\n        assert.equal(obj, 'item 3', 'externalAction was called with proper argument');\n      }\n    };\n\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3', 'item 4']));\n      component.set('select-item', 'externalAction');\n      component.set('targetObject', targetObject);\n    });\n\n    this.render();\n\n    Ember['default'].run(function () {\n      component._onItemAdd('item 3');\n    });\n  });\n\n  ember_qunit.test('it sends select-item action when an item is deselected', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n\n    var targetObject = {\n      externalAction: function externalAction(obj) {\n        assert.equal(obj, null, 'externalAction was called with proper argument');\n      }\n    };\n\n    Ember['default'].run(function () {\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3', 'item 4']));\n      component.set('selection', 'item 1');\n      component.set('select-item', 'externalAction');\n      component.set('targetObject', targetObject);\n    });\n\n    this.render();\n\n    Ember['default'].run(function () {\n      component._onItemRemove('item 1');\n    });\n  });\n\n  ember_qunit.test('it sends add-item action when an item is selected in multiple mode', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n\n    var targetObject = {\n      externalAction: function externalAction(obj) {\n        assert.equal(obj, 'item 3', 'externalAction was called with proper argument');\n      }\n    };\n\n    Ember['default'].run(function () {\n      component.set('multiple', true);\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3', 'item 4']));\n      component.set('selection', Ember['default'].A(['item 2']));\n      component.set('add-item', 'externalAction');\n      component.set('targetObject', targetObject);\n    });\n\n    this.render();\n\n    Ember['default'].run(function () {\n      component._onItemAdd('item 3');\n    });\n  });\n\n  ember_qunit.test('it sends remove-item action when an item is deselected in multiple mode', function (assert) {\n    assert.expect(1);\n\n    var component = this.subject();\n\n    var targetObject = {\n      externalAction: function externalAction(obj) {\n        assert.equal(obj, 'item 2', 'externalAction was called with proper argument');\n      }\n    };\n\n    Ember['default'].run(function () {\n      component.set('multiple', true);\n      component.set('content', Ember['default'].A(['item 1', 'item 2', 'item 3', 'item 4']));\n      component.set('selection', Ember['default'].A(['item 2']));\n      component.set('remove-item', 'externalAction');\n      component.set('targetObject', targetObject);\n    });\n\n    this.render();\n\n    Ember['default'].run(function () {\n      component._onItemRemove('item 2');\n    });\n  });\n\n  ember_qunit.test('if label is falsy, don\\'t add item', function (assert) {\n    var component = this.subject();\n    Ember['default'].run(function () {\n      component.set('content', exampleObjectContent());\n      component.set('optionValuePath', 'id');\n      component.set('optionLabelPath', 'unknownLabel');\n    });\n    this.render();\n    assert.deepEqual(asArray(component._selectize.options, 'label'), []);\n  });\n\n  ember_qunit.test('if label is falsy, don\\'t add item, but add it once label updates', function (assert) {\n    var component = this.subject();\n    var content = exampleObjectContent();\n    Ember['default'].run(function () {\n      component.set('content', content);\n      component.set('optionValuePath', 'id');\n      component.set('optionLabelPath', 'unknownLabel');\n    });\n    this.render();\n\n    assert.deepEqual(asArray(component._selectize.options, 'label'), []);\n\n    Ember['default'].run(function () {\n      content.forEach(function (item, index) {\n        item.set('unknownLabel', 'item ' + (index + 1));\n      });\n    });\n\n    assert.deepEqual(asArray(component._selectize.options, 'label'), ['item 1', 'item 2', 'item 3']);\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('dummy/tests/unit/components/ember-selectize-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/ember-selectize-test.js should pass jshint', function() { \n    ok(true, 'unit/components/ember-selectize-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"ember-cli-selectize\",\"version\":\"0.3.4.d6276709\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrheA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}